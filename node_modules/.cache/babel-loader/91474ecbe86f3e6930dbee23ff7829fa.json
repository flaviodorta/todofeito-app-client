{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useRef, useLayoutEffect } from 'react';\nexport function useDimensions() {\n  _s();\n\n  const [dimensions, setDimensions] = useState({});\n  const ref = useRef(null);\n  useLayoutEffect(() => {\n    if (ref.current) setDimensions(ref.current.getBoundingClientRect());\n  }, [ref.current]);\n  return [ref, dimensions];\n}\n\n_s(useDimensions, \"P9oclLgdtnPFW2hvG+2a3qOdrxc=\");","map":{"version":3,"names":["useState","useRef","useLayoutEffect","useDimensions","dimensions","setDimensions","ref","current","getBoundingClientRect"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/hooks/useDimensions.tsx"],"sourcesContent":["import { useState, useRef, useLayoutEffect } from 'react';\n\nexport function useDimensions<T extends HTMLElement>() {\n  const [dimensions, setDimensions] = useState({});\n  const ref = useRef<T>(null);\n\n  useLayoutEffect(() => {\n    if (ref.current) setDimensions(ref.current.getBoundingClientRect());\n  }, [ref.current]);\n\n  return [ref, dimensions];\n}\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,eAA3B,QAAkD,OAAlD;AAEA,OAAO,SAASC,aAAT,GAAgD;EAAA;;EACrD,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAMM,GAAG,GAAGL,MAAM,CAAI,IAAJ,CAAlB;EAEAC,eAAe,CAAC,MAAM;IACpB,IAAII,GAAG,CAACC,OAAR,EAAiBF,aAAa,CAACC,GAAG,CAACC,OAAJ,CAAYC,qBAAZ,EAAD,CAAb;EAClB,CAFc,EAEZ,CAACF,GAAG,CAACC,OAAL,CAFY,CAAf;EAIA,OAAO,CAACD,GAAD,EAAMF,UAAN,CAAP;AACD;;GATeD,a"},"metadata":{},"sourceType":"module"}