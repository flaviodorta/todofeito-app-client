{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useRef } from 'react';\nexport function useDimensions() {\n  _s();\n\n  // setting default values\n  const liveMeasure = true;\n  const delay = 250;\n  const initialDimensions = {};\n  const [dimensions, setDimensions] = useState(initialDimensions); // const [node, setNode] = useState<T | null>(null);\n  // let ref: null | ((newNode: T) => void) = useCallback(\n  //   (newNode: T) => {\n  //     setNode(newNode);\n  //   },\n  //   [node]\n  // );\n  // const ref = useRef<T | null>(null) as MutableRefObject<T | null>;\n\n  const elementRef = useRef(null);\n\n  const createRef = node => {\n    elementRef.current = node;\n  };\n\n  console.log(elementRef.current); // useLayoutEffect(() => {\n  //   console.log('render: usDimensions');\n  //   if (!ref.current) {\n  //     return;\n  //   }\n  // const measure = () => {\n  //   window.requestAnimationFrame(() => {\n  //     const newDimensions = ref.current ? ref.current.getBoundingClientRect() : {};\n  //     setDimensions(newDimensions);\n  //   });\n  // };\n  // measure();\n  // if (liveMeasure && ref.current) {\n  //   const debounceMeasure = debounce(measure, delay);\n  //   if ('ResizeObserver' in window) {\n  //     const resizeObserver = new ResizeObserver(debounceMeasure);\n  //     resizeObserver.observe(ref.current);\n  //     window.addEventListener('scroll', debounceMeasure);\n  //     return () => {\n  //       resizeObserver.disconnect();\n  //       window.removeEventListener('scroll', debounceMeasure);\n  //     };\n  //   }\n  //   window.addEventListener('resize', debounceMeasure);\n  //   window.addEventListener('scroll', debounceMeasure);\n  //   return () => {\n  //     window.removeEventListener('resize', debounceMeasure);\n  //     window.addEventListener('scroll', debounceMeasure);\n  //   };\n  // }\n  // }, [ref.current, liveMeasure]);\n\n  return [ref, dimensions];\n}\n\n_s(useDimensions, \"1AmaUyH8AC7c5uR5WahllTsufcA=\");","map":{"version":3,"names":["useState","useRef","useDimensions","liveMeasure","delay","initialDimensions","dimensions","setDimensions","elementRef","createRef","node","current","console","log","ref"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/hooks/useDimensions.tsx"],"sourcesContent":["import { useState, useRef, useLayoutEffect, useCallback, MutableRefObject } from 'react';\nimport { debounce } from '../utils/debounce';\n\nexport function useDimensions<T extends HTMLElement>() {\n  // setting default values\n  const liveMeasure = true;\n  const delay = 250;\n  const initialDimensions = {};\n\n  const [dimensions, setDimensions] = useState(initialDimensions);\n  // const [node, setNode] = useState<T | null>(null);\n\n  // let ref: null | ((newNode: T) => void) = useCallback(\n  //   (newNode: T) => {\n  //     setNode(newNode);\n  //   },\n  //   [node]\n  // );\n\n  // const ref = useRef<T | null>(null) as MutableRefObject<T | null>;\n\n  const elementRef = useRef<T | null>(null);\n\n  const createRef = (node: T | null) => {\n    elementRef.current = node;\n  };\n\n  console.log(elementRef.current);\n  // useLayoutEffect(() => {\n  //   console.log('render: usDimensions');\n  //   if (!ref.current) {\n  //     return;\n  //   }\n\n  // const measure = () => {\n  //   window.requestAnimationFrame(() => {\n  //     const newDimensions = ref.current ? ref.current.getBoundingClientRect() : {};\n  //     setDimensions(newDimensions);\n  //   });\n  // };\n\n  // measure();\n\n  // if (liveMeasure && ref.current) {\n  //   const debounceMeasure = debounce(measure, delay);\n\n  //   if ('ResizeObserver' in window) {\n  //     const resizeObserver = new ResizeObserver(debounceMeasure);\n  //     resizeObserver.observe(ref.current);\n  //     window.addEventListener('scroll', debounceMeasure);\n\n  //     return () => {\n  //       resizeObserver.disconnect();\n  //       window.removeEventListener('scroll', debounceMeasure);\n  //     };\n  //   }\n  //   window.addEventListener('resize', debounceMeasure);\n  //   window.addEventListener('scroll', debounceMeasure);\n\n  //   return () => {\n  //     window.removeEventListener('resize', debounceMeasure);\n  //     window.addEventListener('scroll', debounceMeasure);\n  //   };\n  // }\n  // }, [ref.current, liveMeasure]);\n\n  return [ref, dimensions];\n}\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiF,OAAjF;AAGA,OAAO,SAASC,aAAT,GAAgD;EAAA;;EACrD;EACA,MAAMC,WAAW,GAAG,IAApB;EACA,MAAMC,KAAK,GAAG,GAAd;EACA,MAAMC,iBAAiB,GAAG,EAA1B;EAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACK,iBAAD,CAA5C,CANqD,CAOrD;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;;EAEA,MAAMG,UAAU,GAAGP,MAAM,CAAW,IAAX,CAAzB;;EAEA,MAAMQ,SAAS,GAAIC,IAAD,IAAoB;IACpCF,UAAU,CAACG,OAAX,GAAqBD,IAArB;EACD,CAFD;;EAIAE,OAAO,CAACC,GAAR,CAAYL,UAAU,CAACG,OAAvB,EAxBqD,CAyBrD;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAO,CAACG,GAAD,EAAMR,UAAN,CAAP;AACD;;GAhEeJ,a"},"metadata":{},"sourceType":"module"}