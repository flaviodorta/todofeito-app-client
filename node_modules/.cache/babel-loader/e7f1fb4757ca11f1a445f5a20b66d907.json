{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useLayoutEffect, useCallback } from 'react';\nimport { debounce } from '../utils/debounce';\nexport function useDimensions(liveMeasure) {\n  _s();\n\n  let delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n  let initialDimensions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let effectDeps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  liverMeasure = true;\n  const [dimensions, setDimensions] = useState(initialDimensions);\n  const [node, setNode] = useState(null);\n  const ref = useCallback(newNode => {\n    setNode(newNode);\n  }, []);\n  useLayoutEffect(() => {\n    if (!node) {\n      return;\n    }\n\n    const measure = () => {\n      window.requestAnimationFrame(() => {\n        const newDimensions = node.getBoundingClientRect();\n        setDimensions(newDimensions);\n      });\n    };\n\n    measure();\n\n    if (liveMeasure) {\n      const debounceMeasure = debounce(measure, delay);\n\n      if ('ResizeObserver' in window) {\n        resizeObserver.observe(node);\n        window.addEventListener('scroll', debounceMeasure);\n      }\n    }\n  });\n  return [ref, dimensions];\n}\n\n_s(useDimensions, \"RFPOvf5ckS8a3/FMkEjOdHJRWCk=\");","map":{"version":3,"names":["useState","useLayoutEffect","useCallback","debounce","useDimensions","liveMeasure","delay","initialDimensions","effectDeps","liverMeasure","dimensions","setDimensions","node","setNode","ref","newNode","measure","window","requestAnimationFrame","newDimensions","getBoundingClientRect","debounceMeasure","resizeObserver","observe","addEventListener"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/hooks/useDimensions.tsx"],"sourcesContent":["import React, { useState, useRef, useLayoutEffect, useCallback } from 'react';\nimport { setOriginalNode } from 'typescript';\nimport { debounce } from '../utils/debounce';\n\nexport function useDimensions<T extends HTMLElement>(\n  liveMeasure: boolean,\n  delay: number = 250,\n  initialDimensions = {},\n  effectDeps = []\n) {\n  liverMeasure = true;\n\n  const [dimensions, setDimensions] = useState(initialDimensions);\n  const [node, setNode] = useState<T | null>(null);\n\n  const ref = useCallback((newNode: T) => {\n    setNode(newNode);\n  }, []);\n\n  useLayoutEffect(() => {\n    if (!node) {\n      return;\n    }\n\n    const measure = () => {\n      window.requestAnimationFrame(() => {\n        const newDimensions = node.getBoundingClientRect();\n        setDimensions(newDimensions);\n      });\n    };\n\n    measure();\n\n    if (liveMeasure) {\n      const debounceMeasure = debounce(measure, delay);\n\n      if ('ResizeObserver' in window) {\n        resizeObserver.observe(node);\n        window.addEventListener('scroll', debounceMeasure);\n      }\n    }\n  });\n\n  return [ref, dimensions];\n}\n"],"mappings":";;AAAA,SAAgBA,QAAhB,EAAkCC,eAAlC,EAAmDC,WAAnD,QAAsE,OAAtE;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAO,SAASC,aAAT,CACLC,WADK,EAKL;EAAA;;EAAA,IAHAC,KAGA,uEAHgB,GAGhB;EAAA,IAFAC,iBAEA,uEAFoB,EAEpB;EAAA,IADAC,UACA,uEADa,EACb;EACAC,YAAY,GAAG,IAAf;EAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAACO,iBAAD,CAA5C;EACA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAW,IAAX,CAAhC;EAEA,MAAMc,GAAG,GAAGZ,WAAW,CAAEa,OAAD,IAAgB;IACtCF,OAAO,CAACE,OAAD,CAAP;EACD,CAFsB,EAEpB,EAFoB,CAAvB;EAIAd,eAAe,CAAC,MAAM;IACpB,IAAI,CAACW,IAAL,EAAW;MACT;IACD;;IAED,MAAMI,OAAO,GAAG,MAAM;MACpBC,MAAM,CAACC,qBAAP,CAA6B,MAAM;QACjC,MAAMC,aAAa,GAAGP,IAAI,CAACQ,qBAAL,EAAtB;QACAT,aAAa,CAACQ,aAAD,CAAb;MACD,CAHD;IAID,CALD;;IAOAH,OAAO;;IAEP,IAAIX,WAAJ,EAAiB;MACf,MAAMgB,eAAe,GAAGlB,QAAQ,CAACa,OAAD,EAAUV,KAAV,CAAhC;;MAEA,IAAI,oBAAoBW,MAAxB,EAAgC;QAC9BK,cAAc,CAACC,OAAf,CAAuBX,IAAvB;QACAK,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCH,eAAlC;MACD;IACF;EACF,CAtBc,CAAf;EAwBA,OAAO,CAACP,GAAD,EAAMJ,UAAN,CAAP;AACD;;GAxCeN,a"},"metadata":{},"sourceType":"module"}