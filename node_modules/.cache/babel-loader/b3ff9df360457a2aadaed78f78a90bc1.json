{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/coding/projects/todofeito-app/src/context/ThemeAppContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, createContext } from 'react';\nimport { usePersistedState } from '../hooks/usePersistedState';\nimport { light, dark } from '../styles/theme/theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  theme: light,\n  toggleTheme: () => {}\n};\nconst AppThemeContext = /*#__PURE__*/createContext({});\nexport const useAppTheme = () => {\n  _s();\n\n  return useContext(AppThemeContext);\n};\n\n_s(useAppTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AppThemeProvider(props) {\n  _s2();\n\n  const [theme, setTheme] = usePersistedState('theme', light);\n\n  const toggleTheme = () => {\n    setTheme(theme === light ? dark : light);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AppThemeProvider, \"G6tpA9ytfXUc1Ok3VYBBPW7zork=\", false, function () {\n  return [usePersistedState];\n});\n\n_c = AppThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppThemeProvider\");","map":{"version":3,"names":["useContext","createContext","usePersistedState","light","dark","initialValue","theme","toggleTheme","AppThemeContext","useAppTheme","AppThemeProvider","props","setTheme","children"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/context/ThemeAppContext.tsx"],"sourcesContent":["import { useContext, createContext } from 'react';\nimport { DefaultTheme } from 'styled-components';\nimport { usePersistedState } from '../hooks/usePersistedState';\nimport { light, dark } from '../styles/theme/theme';\nimport { AppThemeContextType, AppThemeProviderProps } from '../types/types';\n\nconst initialValue = {\n  theme: light,\n  toggleTheme: () => {}\n}\n\nconst AppThemeContext = createContext<AppThemeContextType>({});\n\nexport const useAppTheme = () => useContext(AppThemeContext);\n\nexport function AppThemeProvider(props : AppThemeProviderProps): JSX.Element {\n  const [theme, setTheme] = usePersistedState<DefaultTheme>('theme', light);\n\n  const toggleTheme = () => {\n    setTheme(theme === light ? dark : light);\n  };\n\n  return (\n    <AppThemeContext.Provider value={{theme, toggleTheme}}>{props.children}</AppThemeContext.Provider>\n  )\n}\n"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,OAA1C;AAEA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,uBAA5B;;AAGA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEH,KADY;EAEnBI,WAAW,EAAE,MAAM,CAAE;AAFF,CAArB;AAKA,MAAMC,eAAe,gBAAGP,aAAa,CAAsB,EAAtB,CAArC;AAEA,OAAO,MAAMQ,WAAW,GAAG;EAAA;;EAAA,OAAMT,UAAU,CAACQ,eAAD,CAAhB;AAAA,CAApB;;GAAMC,W;;AAEb,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAsE;EAAA;;EAC3E,MAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBV,iBAAiB,CAAe,OAAf,EAAwBC,KAAxB,CAA3C;;EAEA,MAAMI,WAAW,GAAG,MAAM;IACxBK,QAAQ,CAACN,KAAK,KAAKH,KAAV,GAAkBC,IAAlB,GAAyBD,KAA1B,CAAR;EACD,CAFD;;EAIA,oBACE,QAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAE;MAACG,KAAD;MAAQC;IAAR,CAAjC;IAAA,UAAwDI,KAAK,CAACE;EAA9D;IAAA;IAAA;IAAA;EAAA,QADF;AAGD;;IAVeH,gB;UACYR,iB;;;KADZQ,gB"},"metadata":{},"sourceType":"module"}