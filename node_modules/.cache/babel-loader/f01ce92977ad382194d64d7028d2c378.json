{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/coding/projects/todofeito-app/src/pages/base-page/BasePage.component.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Navbar } from '../../components/layout/Navbar/Navbar.component';\nimport { Sidebar } from '../../components/layout/Sidebar/Sidebar.component';\nimport { Content } from './BasePage.styled';\nimport { useWindowSize } from '../../hooks/useWindowSize';\nimport { breakpoints } from '../../styles/theme/theme';\nimport { useEventListener } from '../../hooks/useEventListener';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function BasePage(props) {\n  _s();\n\n  const windowSize = useWindowSize();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n\n  const toggleSidebar = () => setIsSidebarOpen(state => !state);\n\n  useEventListener('resize', () => {\n    if (windowSize.width) {\n      if (isSidebarOpen && windowSize.width > parseInt(breakpoints.md, 10)) {\n        setTimeout(toggleSidebar, 200);\n      } else if (windowSize.width < parseInt(breakpoints.md, 10)) {}\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toggleSidebar: toggleSidebar,\n      isSidebarOpen: isSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      closeSidebar: closeSidebar,\n      openSidebar: openSidebar,\n      isSidebarOpen: isSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      isSidebarOpen: isSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BasePage, \"ToBmbsrwq5CJGK2Fua13dR0r+7s=\", false, function () {\n  return [useWindowSize, useEventListener];\n});\n\n_c = BasePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasePage\");","map":{"version":3,"names":["useState","Navbar","Sidebar","Content","useWindowSize","breakpoints","useEventListener","BasePage","props","windowSize","isSidebarOpen","setIsSidebarOpen","toggleSidebar","state","width","parseInt","md","setTimeout","closeSidebar","openSidebar"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/pages/base-page/BasePage.component.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { BasePageProps } from './BasePage.types';\n\nimport { Navbar } from '../../components/layout/Navbar/Navbar.component';\nimport { Sidebar } from '../../components/layout/Sidebar/Sidebar.component';\nimport { Content } from './BasePage.styled';\nimport { useWindowSize } from '../../hooks/useWindowSize';\nimport { breakpoints } from '../../styles/theme/theme';\nimport { useEventListener } from '../../hooks/useEventListener';\nimport { sign } from 'crypto';\n\nexport function BasePage(props: BasePageProps): JSX.Element {\n  const windowSize = useWindowSize();\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState<boolean>(true);\n\n  const toggleSidebar = () => setIsSidebarOpen((state) => !state);\n\n  useEventListener('resize', () => {\n    if (windowSize.width) {\n      if (isSidebarOpen && windowSize.width > parseInt(breakpoints.md, 10)) {\n        setTimeout(toggleSidebar, 200);\n      } else if (windowSize.width < parseInt(breakpoints.md, 10)) {\n      }\n    }\n  });\n\n  return (\n    <>\n      <Navbar toggleSidebar={toggleSidebar} isSidebarOpen={isSidebarOpen} />\n      <Sidebar\n        closeSidebar={closeSidebar}\n        openSidebar={openSidebar}\n        isSidebarOpen={isSidebarOpen}\n      />\n      <Content isSidebarOpen={isSidebarOpen}></Content>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAA6BA,QAA7B,QAA6C,OAA7C;AAGA,SAASC,MAAT,QAAuB,iDAAvB;AACA,SAASC,OAAT,QAAwB,mDAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;;AAGA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAqD;EAAA;;EAC1D,MAAMC,UAAU,GAAGL,aAAa,EAAhC;EAEA,MAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAU,IAAV,CAAlD;;EAEA,MAAMY,aAAa,GAAG,MAAMD,gBAAgB,CAAEE,KAAD,IAAW,CAACA,KAAb,CAA5C;;EAEAP,gBAAgB,CAAC,QAAD,EAAW,MAAM;IAC/B,IAAIG,UAAU,CAACK,KAAf,EAAsB;MACpB,IAAIJ,aAAa,IAAID,UAAU,CAACK,KAAX,GAAmBC,QAAQ,CAACV,WAAW,CAACW,EAAb,EAAiB,EAAjB,CAAhD,EAAsE;QACpEC,UAAU,CAACL,aAAD,EAAgB,GAAhB,CAAV;MACD,CAFD,MAEO,IAAIH,UAAU,CAACK,KAAX,GAAmBC,QAAQ,CAACV,WAAW,CAACW,EAAb,EAAiB,EAAjB,CAA/B,EAAqD,CAC3D;IACF;EACF,CAPe,CAAhB;EASA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,aAAa,EAAEJ,aAAvB;MAAsC,aAAa,EAAEF;IAArD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MACE,YAAY,EAAEQ,YADhB;MAEE,WAAW,EAAEC,WAFf;MAGE,aAAa,EAAET;IAHjB;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE,QAAC,OAAD;MAAS,aAAa,EAAEA;IAAxB;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,gBADF;AAWD;;GA3BeH,Q;UACKH,a,EAMnBE,gB;;;KAPcC,Q"},"metadata":{},"sourceType":"module"}