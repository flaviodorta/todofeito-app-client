{"ast":null,"code":"import _slicedToArray from \"/home/user/Documents/coding/projects/todofeito-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nexport function useFocus(elementRef) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      focus = _useState2[0],\n      setFocus = _useState2[1];\n\n  var handleOnFocus = function handleOnFocus() {\n    return setFocus(true);\n  };\n\n  var handleOnBlur = function handleOnBlur() {\n    return setFocus(false);\n  };\n\n  return [focus, handleOnFocus, handleOnBlur];\n}","map":{"version":3,"names":["useState","useFocus","elementRef","focus","setFocus","handleOnFocus","handleOnBlur"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/hooks/useFocus.ts"],"sourcesContent":["import { RefObject, useState } from 'react';\n\ntype Response = [boolean, () => void, () => void];\n\nexport function useFocus<T extends HTMLElement>(\n  elementRef: RefObject<T>\n): Response {\n  const [focus, setFocus] = useState<boolean>(false);\n\n  const handleOnFocus = () => setFocus(true);\n  const handleOnBlur = () => setFocus(false);\n\n  return [focus, handleOnFocus, handleOnBlur];\n}\n"],"mappings":";AAAA,SAAoBA,QAApB,QAAoC,OAApC;AAIA,OAAO,SAASC,QAAT,CACLC,UADK,EAEK;EAAA,gBACgBF,QAAQ,CAAU,KAAV,CADxB;EAAA;EAAA,IACHG,KADG;EAAA,IACIC,QADJ;;EAGV,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;IAAA,OAAMD,QAAQ,CAAC,IAAD,CAAd;EAAA,CAAtB;;EACA,IAAME,YAAY,GAAG,SAAfA,YAAe;IAAA,OAAMF,QAAQ,CAAC,KAAD,CAAd;EAAA,CAArB;;EAEA,OAAO,CAACD,KAAD,EAAQE,aAAR,EAAuBC,YAAvB,CAAP;AACD"},"metadata":{},"sourceType":"module"}