{"ast":null,"code":"import _slicedToArray from \"/home/user/Documents/coding/projects/todofeito-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useCallback, useLayoutEffect, useState } from 'react';\nimport { useEventListener } from './useEventListener';\nvar DOMRectNull = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\nexport function useElementSize() {\n  var _useState = useState(DOMRectNull),\n      _useState2 = _slicedToArray(_useState, 2),\n      size = _useState2[0],\n      setSize = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ref = _useState4[0],\n      setRef = _useState4[1];\n\n  var x = size.x,\n      y = size.y,\n      width = size.width,\n      height = size.height,\n      top = size.top,\n      right = size.right,\n      bottom = size.bottom,\n      left = size.left;\n  var handleSize = useCallback(function () {\n    if (ref) setSize(ref.getBoundingClientRect());\n  }, [ref]);\n  useLayoutEffect(function () {\n    handleSize();\n  }, [ref]);\n  useEventListener('resize', handleSize);\n  return [setRef, size];\n}","map":{"version":3,"names":["useCallback","useLayoutEffect","useState","useEventListener","DOMRectNull","x","y","width","height","top","right","bottom","left","useElementSize","size","setSize","ref","setRef","handleSize","getBoundingClientRect"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/hooks/useElementSize.ts"],"sourcesContent":["import {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useLayoutEffect,\n  useState,\n} from 'react';\nimport { useEventListener } from './useEventListener';\n\ntype Response<T> = [Dispatch<SetStateAction<T | null>>, DOMRect];\n\nconst DOMRectNull = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n} as DOMRect;\n\nexport function useElementSize<T extends HTMLElement>(): Response<T> {\n  const [size, setSize] = useState<DOMRect>(DOMRectNull);\n  const [ref, setRef] = useState<T | null>(null);\n\n  const { x, y, width, height, top, right, bottom, left } = size;\n\n  const handleSize = useCallback(() => {\n    if (ref) setSize(ref.getBoundingClientRect());\n  }, [ref]);\n\n  useLayoutEffect(() => {\n    handleSize();\n  }, [ref]);\n\n  useEventListener('resize', handleSize);\n\n  return [setRef, size];\n}\n"],"mappings":";AAAA,SAGEA,WAHF,EAIEC,eAJF,EAKEC,QALF,QAMO,OANP;AAOA,SAASC,gBAAT,QAAiC,oBAAjC;AAIA,IAAMC,WAAW,GAAG;EAClBC,CAAC,EAAE,CADe;EAElBC,CAAC,EAAE,CAFe;EAGlBC,KAAK,EAAE,CAHW;EAIlBC,MAAM,EAAE,CAJU;EAKlBC,GAAG,EAAE,CALa;EAMlBC,KAAK,EAAE,CANW;EAOlBC,MAAM,EAAE,CAPU;EAQlBC,IAAI,EAAE;AARY,CAApB;AAWA,OAAO,SAASC,cAAT,GAA8D;EAAA,gBAC3CX,QAAQ,CAAUE,WAAV,CADmC;EAAA;EAAA,IAC5DU,IAD4D;EAAA,IACtDC,OADsD;;EAAA,iBAE7Cb,QAAQ,CAAW,IAAX,CAFqC;EAAA;EAAA,IAE5Dc,GAF4D;EAAA,IAEvDC,MAFuD;;EAAA,IAI3DZ,CAJ2D,GAITS,IAJS,CAI3DT,CAJ2D;EAAA,IAIxDC,CAJwD,GAITQ,IAJS,CAIxDR,CAJwD;EAAA,IAIrDC,KAJqD,GAITO,IAJS,CAIrDP,KAJqD;EAAA,IAI9CC,MAJ8C,GAITM,IAJS,CAI9CN,MAJ8C;EAAA,IAItCC,GAJsC,GAITK,IAJS,CAItCL,GAJsC;EAAA,IAIjCC,KAJiC,GAITI,IAJS,CAIjCJ,KAJiC;EAAA,IAI1BC,MAJ0B,GAITG,IAJS,CAI1BH,MAJ0B;EAAA,IAIlBC,IAJkB,GAITE,IAJS,CAIlBF,IAJkB;EAMnE,IAAMM,UAAU,GAAGlB,WAAW,CAAC,YAAM;IACnC,IAAIgB,GAAJ,EAASD,OAAO,CAACC,GAAG,CAACG,qBAAJ,EAAD,CAAP;EACV,CAF6B,EAE3B,CAACH,GAAD,CAF2B,CAA9B;EAIAf,eAAe,CAAC,YAAM;IACpBiB,UAAU;EACX,CAFc,EAEZ,CAACF,GAAD,CAFY,CAAf;EAIAb,gBAAgB,CAAC,QAAD,EAAWe,UAAX,CAAhB;EAEA,OAAO,CAACD,MAAD,EAASH,IAAT,CAAP;AACD"},"metadata":{},"sourceType":"module"}