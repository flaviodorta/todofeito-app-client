{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useElementSize } from '../../../hooks/useElementSize';\nexport function navbarData() {\n  _s();\n\n  const [label, setLabel] = useState('none'); // foo to set label state to respective button name or set to null\n\n  const setLabelToIcon = state => setLabel(state);\n\n  const setLabelToNone = () => setLabel('none'); // take dimension by button\n\n\n  const [sidebarIconRef, sidebarIconSize] = useElementSize();\n  const [homeIconRef, homeIconSize] = useElementSize();\n  const [addTodoIconRef, addTodoIconSize] = useElementSize();\n  const [completedTodosIconRef, completedTodosIconSize] = useElementSize();\n  const [notificationsIconRef, notificationsIconSize] = useElementSize();\n  const [userIconRef, userIconSize] = useElementSize();\n  const iconsSizes = {\n    sidebar: {\n      ref: sidebarIconRef,\n      width: sidebarIconSize.width\n    },\n    home: {\n      ref: homeIconRef,\n      width: homeIconSize.width\n    },\n    addTodo: {\n      ref: addTodoIconRef,\n      width: addTodoIconSize.width\n    },\n    completedTodos: {\n      ref: completedTodosIconRef,\n      width: completedTodosIconSize.width\n    },\n    notifications: {\n      ref: notificationsIconRef,\n      width: notificationsIconSize.width\n    },\n    user: {\n      ref: userIconRef,\n      width: userIconSize.width\n    }\n  }; // boolean to change visibility of label when that is open\n\n  let isLabelSidebarIconVisible = label === 'sidebar';\n  let isLabelHomeIconVisible = label === 'home';\n  let isLabelAddTodoIconVisible = label === 'add-todo';\n  let isLabelCompletedTodosIconVisible = label === 'completed-todos';\n  let isLabelNotificationsIconVisible = label === 'notifications';\n  let isLabelUserIconVisible = label === 'user'; // content of each label\n\n  const sidebarIconLabelContent = ['Close menu', 'Open menu'];\n  const homeIconLabelContent = 'Go to home';\n  const addTodoIconLabelContent = 'Add todo';\n  const completedTodosIconLabelContent = 'Show produtictivity';\n  const notificationsIconLabelContent = 'Open notifications';\n  const userIconLabelContent = 'Open profile menu';\n  return {};\n}\n\n_s(navbarData, \"62cYxfTVO1NH9HLWbjCd740/rEI=\", false, function () {\n  return [useElementSize, useElementSize, useElementSize, useElementSize, useElementSize, useElementSize];\n});","map":{"version":3,"names":["useState","useElementSize","navbarData","label","setLabel","setLabelToIcon","state","setLabelToNone","sidebarIconRef","sidebarIconSize","homeIconRef","homeIconSize","addTodoIconRef","addTodoIconSize","completedTodosIconRef","completedTodosIconSize","notificationsIconRef","notificationsIconSize","userIconRef","userIconSize","iconsSizes","sidebar","ref","width","home","addTodo","completedTodos","notifications","user","isLabelSidebarIconVisible","isLabelHomeIconVisible","isLabelAddTodoIconVisible","isLabelCompletedTodosIconVisible","isLabelNotificationsIconVisible","isLabelUserIconVisible","sidebarIconLabelContent","homeIconLabelContent","addTodoIconLabelContent","completedTodosIconLabelContent","notificationsIconLabelContent","userIconLabelContent"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/components/app/Navbar/Navbar.data.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useElementSize } from '../../../hooks/useElementSize';\n\nexport function navbarData() {\n  const [label, setLabel] = useState<string>('none');\n\n  // foo to set label state to respective button name or set to null\n  const setLabelToIcon = (state: string) => setLabel(state);\n  const setLabelToNone = () => setLabel('none');\n\n  // take dimension by button\n  const [sidebarIconRef, sidebarIconSize] = useElementSize();\n  const [homeIconRef, homeIconSize] = useElementSize();\n  const [addTodoIconRef, addTodoIconSize] = useElementSize();\n  const [completedTodosIconRef, completedTodosIconSize] = useElementSize();\n  const [notificationsIconRef, notificationsIconSize] = useElementSize();\n  const [userIconRef, userIconSize] = useElementSize();\n\n  const iconsSizes = {\n    sidebar: {\n      ref: sidebarIconRef,\n      width: sidebarIconSize.width,\n    },\n    home: {\n      ref: homeIconRef,\n      width: homeIconSize.width,\n    },\n    addTodo: {\n      ref: addTodoIconRef,\n      width: addTodoIconSize.width,\n    },\n    completedTodos: {\n      ref: completedTodosIconRef,\n      width: completedTodosIconSize.width,\n    },\n    notifications: {\n      ref: notificationsIconRef,\n      width: notificationsIconSize.width,\n    },\n    user: {\n      ref: userIconRef,\n      width: userIconSize.width,\n    },\n  };\n\n  // boolean to change visibility of label when that is open\n  let isLabelSidebarIconVisible = label === 'sidebar';\n  let isLabelHomeIconVisible = label === 'home';\n  let isLabelAddTodoIconVisible = label === 'add-todo';\n  let isLabelCompletedTodosIconVisible = label === 'completed-todos';\n  let isLabelNotificationsIconVisible = label === 'notifications';\n  let isLabelUserIconVisible = label === 'user';\n\n  // content of each label\n  const sidebarIconLabelContent: [string, string] = ['Close menu', 'Open menu'];\n  const homeIconLabelContent = 'Go to home';\n  const addTodoIconLabelContent = 'Add todo';\n  const completedTodosIconLabelContent = 'Show produtictivity';\n  const notificationsIconLabelContent = 'Open notifications';\n  const userIconLabelContent = 'Open profile menu';\n\n  return {};\n}\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,OAAO,SAASC,UAAT,GAAsB;EAAA;;EAC3B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAS,MAAT,CAAlC,CAD2B,CAG3B;;EACA,MAAMK,cAAc,GAAIC,KAAD,IAAmBF,QAAQ,CAACE,KAAD,CAAlD;;EACA,MAAMC,cAAc,GAAG,MAAMH,QAAQ,CAAC,MAAD,CAArC,CAL2B,CAO3B;;;EACA,MAAM,CAACI,cAAD,EAAiBC,eAAjB,IAAoCR,cAAc,EAAxD;EACA,MAAM,CAACS,WAAD,EAAcC,YAAd,IAA8BV,cAAc,EAAlD;EACA,MAAM,CAACW,cAAD,EAAiBC,eAAjB,IAAoCZ,cAAc,EAAxD;EACA,MAAM,CAACa,qBAAD,EAAwBC,sBAAxB,IAAkDd,cAAc,EAAtE;EACA,MAAM,CAACe,oBAAD,EAAuBC,qBAAvB,IAAgDhB,cAAc,EAApE;EACA,MAAM,CAACiB,WAAD,EAAcC,YAAd,IAA8BlB,cAAc,EAAlD;EAEA,MAAMmB,UAAU,GAAG;IACjBC,OAAO,EAAE;MACPC,GAAG,EAAEd,cADE;MAEPe,KAAK,EAAEd,eAAe,CAACc;IAFhB,CADQ;IAKjBC,IAAI,EAAE;MACJF,GAAG,EAAEZ,WADD;MAEJa,KAAK,EAAEZ,YAAY,CAACY;IAFhB,CALW;IASjBE,OAAO,EAAE;MACPH,GAAG,EAAEV,cADE;MAEPW,KAAK,EAAEV,eAAe,CAACU;IAFhB,CATQ;IAajBG,cAAc,EAAE;MACdJ,GAAG,EAAER,qBADS;MAEdS,KAAK,EAAER,sBAAsB,CAACQ;IAFhB,CAbC;IAiBjBI,aAAa,EAAE;MACbL,GAAG,EAAEN,oBADQ;MAEbO,KAAK,EAAEN,qBAAqB,CAACM;IAFhB,CAjBE;IAqBjBK,IAAI,EAAE;MACJN,GAAG,EAAEJ,WADD;MAEJK,KAAK,EAAEJ,YAAY,CAACI;IAFhB;EArBW,CAAnB,CAf2B,CA0C3B;;EACA,IAAIM,yBAAyB,GAAG1B,KAAK,KAAK,SAA1C;EACA,IAAI2B,sBAAsB,GAAG3B,KAAK,KAAK,MAAvC;EACA,IAAI4B,yBAAyB,GAAG5B,KAAK,KAAK,UAA1C;EACA,IAAI6B,gCAAgC,GAAG7B,KAAK,KAAK,iBAAjD;EACA,IAAI8B,+BAA+B,GAAG9B,KAAK,KAAK,eAAhD;EACA,IAAI+B,sBAAsB,GAAG/B,KAAK,KAAK,MAAvC,CAhD2B,CAkD3B;;EACA,MAAMgC,uBAAyC,GAAG,CAAC,YAAD,EAAe,WAAf,CAAlD;EACA,MAAMC,oBAAoB,GAAG,YAA7B;EACA,MAAMC,uBAAuB,GAAG,UAAhC;EACA,MAAMC,8BAA8B,GAAG,qBAAvC;EACA,MAAMC,6BAA6B,GAAG,oBAAtC;EACA,MAAMC,oBAAoB,GAAG,mBAA7B;EAEA,OAAO,EAAP;AACD;;GA3DetC,U;UAQ4BD,c,EACNA,c,EACMA,c,EACcA,c,EACFA,c,EAClBA,c"},"metadata":{},"sourceType":"module"}