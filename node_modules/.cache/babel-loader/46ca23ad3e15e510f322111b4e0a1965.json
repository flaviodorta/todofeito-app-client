{"ast":null,"code":"import _slicedToArray from \"/home/user/Documents/coding/projects/todofeito-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/user/Documents/coding/projects/todofeito-app/client/src/context-api/theme-api/ThemeAppContext.tsx\";\nimport { useContext, createContext } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { usePersistedState } from '../../hooks/usePersistedState';\nimport { dark, light } from '../../styles/theme/theme';\nvar initialValue = {\n  mode: 'light',\n  toggleMode: function toggleMode() {}\n};\nvar AppThemeContext = createContext(initialValue);\nexport var useAppTheme = function useAppTheme() {\n  return useContext(AppThemeContext);\n};\nexport function AppThemeProvider(props) {\n  var _usePersistedState = usePersistedState('mode', 'light'),\n      _usePersistedState2 = _slicedToArray(_usePersistedState, 2),\n      mode = _usePersistedState2[0],\n      setMode = _usePersistedState2[1];\n\n  var toggleMode = function toggleMode() {\n    console.log('click');\n    setMode(mode === 'light' ? 'dark' : 'light');\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: mode === 'light' ? light : dark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppThemeContext.Provider, {\n    value: {\n      mode: mode,\n      toggleMode: toggleMode\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, props.children));\n}","map":{"version":3,"names":["useContext","createContext","ThemeProvider","usePersistedState","dark","light","initialValue","mode","toggleMode","AppThemeContext","useAppTheme","AppThemeProvider","props","setMode","console","log","children"],"sources":["/home/user/Documents/coding/projects/todofeito-app/client/src/context-api/theme-api/ThemeAppContext.tsx"],"sourcesContent":["import { useContext, createContext } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { usePersistedState } from '../../hooks/usePersistedState';\nimport { dark, light } from '../../styles/theme/theme';\nimport { AppThemeContextType, AppThemeProviderProps } from './ThemeAppContext.types';\n\nconst initialValue = {\n  mode: 'light',\n  toggleMode: () => {},\n};\n\nconst AppThemeContext = createContext<AppThemeContextType>(initialValue);\n\nexport const useAppTheme = () => useContext(AppThemeContext);\n\nexport function AppThemeProvider(props: AppThemeProviderProps): JSX.Element {\n  const [mode, setMode] = usePersistedState<string>('mode', 'light');\n\n  const toggleMode = () => {\n    console.log('click');\n    setMode(mode === 'light' ? 'dark' : 'light');\n  };\n\n  return (\n    <ThemeProvider theme={mode === 'light' ? light : dark}>\n      <AppThemeContext.Provider value={{ mode, toggleMode }}>\n        {props.children}\n      </AppThemeContext.Provider>\n    </ThemeProvider>\n  );\n}\n"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,OAA1C;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,0BAA5B;AAGA,IAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,OADa;EAEnBC,UAAU,EAAE,sBAAM,CAAE;AAFD,CAArB;AAKA,IAAMC,eAAe,GAAGR,aAAa,CAAsBK,YAAtB,CAArC;AAEA,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc;EAAA,OAAMV,UAAU,CAACS,eAAD,CAAhB;AAAA,CAApB;AAEP,OAAO,SAASE,gBAAT,CAA0BC,KAA1B,EAAqE;EAAA,yBAClDT,iBAAiB,CAAS,MAAT,EAAiB,OAAjB,CADiC;EAAA;EAAA,IACnEI,IADmE;EAAA,IAC7DM,OAD6D;;EAG1E,IAAML,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvBM,OAAO,CAACC,GAAR,CAAY,OAAZ;IACAF,OAAO,CAACN,IAAI,KAAK,OAAT,GAAmB,MAAnB,GAA4B,OAA7B,CAAP;EACD,CAHD;;EAKA,oBACE,oBAAC,aAAD;IAAe,KAAK,EAAEA,IAAI,KAAK,OAAT,GAAmBF,KAAnB,GAA2BD,IAAjD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAE;MAAEG,IAAI,EAAJA,IAAF;MAAQC,UAAU,EAAVA;IAAR,CAAjC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGI,KAAK,CAACI,QADT,CADF,CADF;AAOD"},"metadata":{},"sourceType":"module"}