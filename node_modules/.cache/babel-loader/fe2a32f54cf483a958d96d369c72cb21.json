{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useLayoutEffect, useCallback } from 'react';\nimport { debounce } from '../utils/debounce';\nexport function useDimensions(liveMeasure, delay, initialDimensions, effectDeps) {\n  _s();\n\n  liveMeasure = true;\n  delay = 250;\n  initialDimensions = {};\n  effectDeps = [];\n  const [dimensions, setDimensions] = useState(initialDimensions);\n  const [node, setNode] = useState(null);\n  const ref = useCallback(newNode => {\n    setNode(newNode);\n  }, []);\n  useLayoutEffect(() => {\n    if (!node) {\n      return;\n    }\n\n    const measure = () => {\n      window.requestAnimationFrame(() => {\n        const newDimensions = node.getBoundingClientRect();\n        setDimensions(newDimensions);\n      });\n    };\n\n    measure();\n\n    if (liveMeasure) {\n      const debounceMeasure = debounce(measure, delay);\n\n      if ('ResizeObserver' in window) {\n        resizeObserver.observe(node);\n        window.addEventListener('scroll', debounceMeasure);\n      }\n    }\n  });\n  return [ref, dimensions];\n}\n\n_s(useDimensions, \"RFPOvf5ckS8a3/FMkEjOdHJRWCk=\");","map":{"version":3,"names":["useState","useLayoutEffect","useCallback","debounce","useDimensions","liveMeasure","delay","initialDimensions","effectDeps","dimensions","setDimensions","node","setNode","ref","newNode","measure","window","requestAnimationFrame","newDimensions","getBoundingClientRect","debounceMeasure","resizeObserver","observe","addEventListener"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/hooks/useDimensions.tsx"],"sourcesContent":["import React, { useState, useRef, useLayoutEffect, useCallback } from 'react';\nimport { setOriginalNode } from 'typescript';\nimport { debounce } from '../utils/debounce';\n\nexport function useDimensions<T extends HTMLElement>(\n  liveMeasure?: boolean,\n  delay?: number,\n  initialDimensions?: {},\n  effectDeps?: []\n) {\n  liveMeasure = true;\n  delay = 250;\n  initialDimensions = {};\n  effectDeps = [];\n\n  const [dimensions, setDimensions] = useState(initialDimensions);\n  const [node, setNode] = useState<T | null>(null);\n\n  const ref = useCallback((newNode: T) => {\n    setNode(newNode);\n  }, []);\n\n  useLayoutEffect(() => {\n    if (!node) {\n      return;\n    }\n\n    const measure = () => {\n      window.requestAnimationFrame(() => {\n        const newDimensions = node.getBoundingClientRect();\n        setDimensions(newDimensions);\n      });\n    };\n\n    measure();\n\n    if (liveMeasure) {\n      const debounceMeasure = debounce(measure, delay);\n\n      if ('ResizeObserver' in window) {\n        resizeObserver.observe(node);\n        window.addEventListener('scroll', debounceMeasure);\n      }\n    }\n  });\n\n  return [ref, dimensions];\n}\n"],"mappings":";;AAAA,SAAgBA,QAAhB,EAAkCC,eAAlC,EAAmDC,WAAnD,QAAsE,OAAtE;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAO,SAASC,aAAT,CACLC,WADK,EAELC,KAFK,EAGLC,iBAHK,EAILC,UAJK,EAKL;EAAA;;EACAH,WAAW,GAAG,IAAd;EACAC,KAAK,GAAG,GAAR;EACAC,iBAAiB,GAAG,EAApB;EACAC,UAAU,GAAG,EAAb;EAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACO,iBAAD,CAA5C;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAW,IAAX,CAAhC;EAEA,MAAMa,GAAG,GAAGX,WAAW,CAAEY,OAAD,IAAgB;IACtCF,OAAO,CAACE,OAAD,CAAP;EACD,CAFsB,EAEpB,EAFoB,CAAvB;EAIAb,eAAe,CAAC,MAAM;IACpB,IAAI,CAACU,IAAL,EAAW;MACT;IACD;;IAED,MAAMI,OAAO,GAAG,MAAM;MACpBC,MAAM,CAACC,qBAAP,CAA6B,MAAM;QACjC,MAAMC,aAAa,GAAGP,IAAI,CAACQ,qBAAL,EAAtB;QACAT,aAAa,CAACQ,aAAD,CAAb;MACD,CAHD;IAID,CALD;;IAOAH,OAAO;;IAEP,IAAIV,WAAJ,EAAiB;MACf,MAAMe,eAAe,GAAGjB,QAAQ,CAACY,OAAD,EAAUT,KAAV,CAAhC;;MAEA,IAAI,oBAAoBU,MAAxB,EAAgC;QAC9BK,cAAc,CAACC,OAAf,CAAuBX,IAAvB;QACAK,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCH,eAAlC;MACD;IACF;EACF,CAtBc,CAAf;EAwBA,OAAO,CAACP,GAAD,EAAMJ,UAAN,CAAP;AACD;;GA3CeL,a"},"metadata":{},"sourceType":"module"}