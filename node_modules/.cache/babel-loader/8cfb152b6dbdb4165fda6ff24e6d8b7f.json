{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/coding/projects/todofeito-app/src/pages/base-page/BasePage.component.tsx\",\n    _s = $RefreshSig$();\n\nimport { useLayoutEffect, useRef, useState } from 'react';\nimport { Navbar } from '../../components/layout/Navbar/Navbar.component';\nimport { Sidebar } from '../../components/layout/Sidebar/Sidebar.component';\nimport { Content } from './BasePage.styled';\nimport { useWindowSize } from '../../hooks/useWindowSize';\nimport { breakpoints } from '../../styles/theme/theme';\nimport { useEventListener } from '../../hooks/useEventListener';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function BasePage(props) {\n  _s();\n\n  const windowSize = useWindowSize();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n\n  const toggleSidebar = () => setIsSidebarOpen(state => !state);\n\n  const oldWindowWidth = useRef(undefined);\n  useLayoutEffect(() => {\n    return () => {\n      console.log('use layout effect');\n      oldWindowWidth.current = windowSize.width;\n    };\n  });\n  useEventListener('resize', () => {\n    // console.log('old: ', oldWindowWidth.current);\n    // console.log('curernt: ', windowSize.width);\n    console.log('use event listener');\n\n    if (windowSize.width) {\n      if (isSidebarOpen && windowSize.width > parseInt(breakpoints.md, 10)) {\n        setTimeout(toggleSidebar, 200);\n      } else if (windowSize.width < parseInt(breakpoints.md, 10)) {}\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toggleSidebar: toggleSidebar,\n      isSidebarOpen: isSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      toggleSidebar: toggleSidebar,\n      isSidebarOpen: isSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      isSidebarOpen: isSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BasePage, \"aD5g4hHHXWyqwKg213weVyxIjBo=\", false, function () {\n  return [useWindowSize, useEventListener];\n});\n\n_c = BasePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasePage\");","map":{"version":3,"names":["useLayoutEffect","useRef","useState","Navbar","Sidebar","Content","useWindowSize","breakpoints","useEventListener","BasePage","props","windowSize","isSidebarOpen","setIsSidebarOpen","toggleSidebar","state","oldWindowWidth","undefined","console","log","current","width","parseInt","md","setTimeout"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/pages/base-page/BasePage.component.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { BasePageProps } from './BasePage.types';\n\nimport { Navbar } from '../../components/layout/Navbar/Navbar.component';\nimport { Sidebar } from '../../components/layout/Sidebar/Sidebar.component';\nimport { Content } from './BasePage.styled';\nimport { useWindowSize } from '../../hooks/useWindowSize';\nimport { breakpoints } from '../../styles/theme/theme';\nimport { useEventListener } from '../../hooks/useEventListener';\n\nexport function BasePage(props: BasePageProps): JSX.Element {\n  const windowSize = useWindowSize();\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState<boolean>(true);\n\n  const toggleSidebar = () => setIsSidebarOpen((state) => !state);\n\n  const oldWindowWidth = useRef<number | undefined>(undefined);\n\n  useLayoutEffect(() => {\n    return () => {\n      console.log('use layout effect');\n      oldWindowWidth.current = windowSize.width;\n    };\n  });\n\n  useEventListener('resize', () => {\n    // console.log('old: ', oldWindowWidth.current);\n    // console.log('curernt: ', windowSize.width);\n\n    console.log('use event listener');\n\n    if (windowSize.width) {\n      if (isSidebarOpen && windowSize.width > parseInt(breakpoints.md, 10)) {\n        setTimeout(toggleSidebar, 200);\n      } else if (windowSize.width < parseInt(breakpoints.md, 10)) {\n      }\n    }\n  });\n\n  return (\n    <>\n      <Navbar toggleSidebar={toggleSidebar} isSidebarOpen={isSidebarOpen} />\n      <Sidebar toggleSidebar={toggleSidebar} isSidebarOpen={isSidebarOpen} />\n      <Content isSidebarOpen={isSidebarOpen}></Content>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAAoBA,eAApB,EAA8CC,MAA9C,EAAsDC,QAAtD,QAAsE,OAAtE;AAGA,SAASC,MAAT,QAAuB,iDAAvB;AACA,SAASC,OAAT,QAAwB,mDAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAqD;EAAA;;EAC1D,MAAMC,UAAU,GAAGL,aAAa,EAAhC;EAEA,MAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAU,IAAV,CAAlD;;EAEA,MAAMY,aAAa,GAAG,MAAMD,gBAAgB,CAAEE,KAAD,IAAW,CAACA,KAAb,CAA5C;;EAEA,MAAMC,cAAc,GAAGf,MAAM,CAAqBgB,SAArB,CAA7B;EAEAjB,eAAe,CAAC,MAAM;IACpB,OAAO,MAAM;MACXkB,OAAO,CAACC,GAAR,CAAY,mBAAZ;MACAH,cAAc,CAACI,OAAf,GAAyBT,UAAU,CAACU,KAApC;IACD,CAHD;EAID,CALc,CAAf;EAOAb,gBAAgB,CAAC,QAAD,EAAW,MAAM;IAC/B;IACA;IAEAU,OAAO,CAACC,GAAR,CAAY,oBAAZ;;IAEA,IAAIR,UAAU,CAACU,KAAf,EAAsB;MACpB,IAAIT,aAAa,IAAID,UAAU,CAACU,KAAX,GAAmBC,QAAQ,CAACf,WAAW,CAACgB,EAAb,EAAiB,EAAjB,CAAhD,EAAsE;QACpEC,UAAU,CAACV,aAAD,EAAgB,GAAhB,CAAV;MACD,CAFD,MAEO,IAAIH,UAAU,CAACU,KAAX,GAAmBC,QAAQ,CAACf,WAAW,CAACgB,EAAb,EAAiB,EAAjB,CAA/B,EAAqD,CAC3D;IACF;EACF,CAZe,CAAhB;EAcA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,aAAa,EAAET,aAAvB;MAAsC,aAAa,EAAEF;IAArD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAS,aAAa,EAAEE,aAAxB;MAAuC,aAAa,EAAEF;IAAtD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,OAAD;MAAS,aAAa,EAAEA;IAAxB;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAOD;;GArCeH,Q;UACKH,a,EAenBE,gB;;;KAhBcC,Q"},"metadata":{},"sourceType":"module"}