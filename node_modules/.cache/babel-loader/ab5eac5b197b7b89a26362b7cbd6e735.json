{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/coding/projects/todofeito-app/src/context-api/theme-api/ThemeAppContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, createContext } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { usePersistedState } from '../../hooks/usePersistedState';\nimport { dark, light } from '../../styles/theme/theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  mode: 'light',\n  toggleMode: () => {}\n};\nconst AppThemeContext = /*#__PURE__*/createContext(initialValue);\nexport const useAppTheme = () => {\n  _s();\n\n  return useContext(AppThemeContext);\n};\n\n_s(useAppTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AppThemeProvider(props) {\n  _s2();\n\n  const [mode, setMode] = usePersistedState('mode', 'light');\n\n  const toggleMode = () => {\n    console.log('click');\n    setMode(mode === 'light' ? 'dark' : 'light');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: mode === 'light' ? light : dark,\n    children: /*#__PURE__*/_jsxDEV(AppThemeContext.Provider, {\n      value: {\n        mode,\n        toggleMode\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AppThemeProvider, \"US8thEVFxZapm2Sr5pGfWHV0ypY=\", false, function () {\n  return [usePersistedState];\n});\n\n_c = AppThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppThemeProvider\");","map":{"version":3,"names":["useContext","createContext","ThemeProvider","usePersistedState","dark","light","initialValue","mode","toggleMode","AppThemeContext","useAppTheme","AppThemeProvider","props","setMode","console","log","children"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/context-api/theme-api/ThemeAppContext.tsx"],"sourcesContent":["import { useContext, createContext } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { usePersistedState } from '../../hooks/usePersistedState';\nimport { dark, light } from '../../styles/theme/theme';\nimport {\n  AppThemeContextType,\n  AppThemeProviderProps,\n} from './ThemeAppContext.types';\n\nconst initialValue = {\n  mode: 'light',\n  toggleMode: () => {},\n};\n\nconst AppThemeContext = createContext<AppThemeContextType>(initialValue);\n\nexport const useAppTheme = () => useContext(AppThemeContext);\n\nexport function AppThemeProvider(props: AppThemeProviderProps): JSX.Element {\n  const [mode, setMode] = usePersistedState<string>('mode', 'light');\n\n  const toggleMode = () => {\n    console.log('click');\n    setMode(mode === 'light' ? 'dark' : 'light');\n  };\n\n  return (\n    <ThemeProvider theme={mode === 'light' ? light : dark}>\n      <AppThemeContext.Provider value={{ mode, toggleMode }}>\n        {props.children}\n      </AppThemeContext.Provider>\n    </ThemeProvider>\n  );\n}\n"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,OAA1C;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,0BAA5B;;AAMA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,OADa;EAEnBC,UAAU,EAAE,MAAM,CAAE;AAFD,CAArB;AAKA,MAAMC,eAAe,gBAAGR,aAAa,CAAsBK,YAAtB,CAArC;AAEA,OAAO,MAAMI,WAAW,GAAG;EAAA;;EAAA,OAAMV,UAAU,CAACS,eAAD,CAAhB;AAAA,CAApB;;GAAMC,W;;AAEb,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAqE;EAAA;;EAC1E,MAAM,CAACL,IAAD,EAAOM,OAAP,IAAkBV,iBAAiB,CAAS,MAAT,EAAiB,OAAjB,CAAzC;;EAEA,MAAMK,UAAU,GAAG,MAAM;IACvBM,OAAO,CAACC,GAAR,CAAY,OAAZ;IACAF,OAAO,CAACN,IAAI,KAAK,OAAT,GAAmB,MAAnB,GAA4B,OAA7B,CAAP;EACD,CAHD;;EAKA,oBACE,QAAC,aAAD;IAAe,KAAK,EAAEA,IAAI,KAAK,OAAT,GAAmBF,KAAnB,GAA2BD,IAAjD;IAAA,uBACE,QAAC,eAAD,CAAiB,QAAjB;MAA0B,KAAK,EAAE;QAAEG,IAAF;QAAQC;MAAR,CAAjC;MAAA,UACGI,KAAK,CAACI;IADT;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;IAfeL,gB;UACUR,iB;;;KADVQ,gB"},"metadata":{},"sourceType":"module"}