{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/coding/projects/todofeito-app/src/pages/base-page/BasePage.component.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { Navbar } from '../../components/layout/Navbar/Navbar.component';\nimport { Sidebar } from '../../components/layout/Sidebar/Sidebar.component';\nimport { Content } from './BasePage.styled';\nimport { useWindowSize } from '../../hooks/useWindowSize';\nimport { breakpoints } from '../../styles/theme/theme';\nimport { useEventListener } from '../../hooks/useEventListener';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function BasePage(props) {\n  _s();\n\n  const windowSize = useWindowSize();\n  const checkWindowWidth = useMemo(() => {\n    if (windowSize.width && windowSize.width > parseInt(breakpoints.md, 10)) {\n      return false;\n    } else if (windowSize.width && windowSize.width < parseInt(breakpoints.md, 10)) {\n      return true;\n    } else {\n      return false;\n    }\n  }, [windowSize.width]);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isBreakpointMd, setIsBreakpointMd] = useState(undefined);\n  useEventListener('resize', () => {\n    if (windowSize.width && windowSize.width < parseInt(breakpoints.md, 10)) {\n      setTimeout(closeSidebar, 100);\n    }\n  });\n  useEffect(() => {\n    setIsBreakpointMd(checkWindowWidth);\n  }, [windowSize.width]);\n\n  const toggleSidebar = () => setIsSidebarOpen(state => !state);\n\n  const closeSidebar = () => setIsSidebarOpen(false);\n\n  const openSidebar = () => setIsSidebarOpen(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toggleSidebar: toggleSidebar,\n      isSidebarOpen: isSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      closeSidebar: closeSidebar,\n      openSidebar: openSidebar,\n      isSidebarOpen: isSidebarOpen,\n      isBreakpointMd: isBreakpointMd,\n      setIsBreakpointMd: setIsBreakpointMd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      isSidebarOpen: isSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BasePage, \"b3QnnE29QHYBjoewTqdhxwUl5tA=\", false, function () {\n  return [useWindowSize, useEventListener];\n});\n\n_c = BasePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasePage\");","map":{"version":3,"names":["useEffect","useMemo","useState","Navbar","Sidebar","Content","useWindowSize","breakpoints","useEventListener","BasePage","props","windowSize","checkWindowWidth","width","parseInt","md","isSidebarOpen","setIsSidebarOpen","isBreakpointMd","setIsBreakpointMd","undefined","setTimeout","closeSidebar","toggleSidebar","state","openSidebar"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/pages/base-page/BasePage.component.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { BasePageProps } from './BasePage.types';\n\nimport { Navbar } from '../../components/layout/Navbar/Navbar.component';\nimport { Sidebar } from '../../components/layout/Sidebar/Sidebar.component';\nimport { Content } from './BasePage.styled';\nimport { useWindowSize } from '../../hooks/useWindowSize';\nimport { breakpoints } from '../../styles/theme/theme';\nimport { useEventListener } from '../../hooks/useEventListener';\n\nexport function BasePage(props: BasePageProps): JSX.Element {\n  const windowSize = useWindowSize();\n\n  const checkWindowWidth = useMemo(() => {\n    if (windowSize.width && windowSize.width > parseInt(breakpoints.md, 10)) {\n      return false;\n    } else if (windowSize.width && windowSize.width < parseInt(breakpoints.md, 10)) {\n      return true;\n    } else {\n      return false;\n    }\n  }, [windowSize.width]);\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState<boolean>(true);\n  const [isBreakpointMd, setIsBreakpointMd] = useState<boolean | undefined>(\n    undefined\n  );\n\n  useEventListener('resize', () => {\n    if (windowSize.width && windowSize.width < parseInt(breakpoints.md, 10)) {\n      setTimeout(closeSidebar, 100);\n    }\n  });\n\n  useEffect(() => {\n    setIsBreakpointMd(checkWindowWidth);\n  }, [windowSize.width]);\n\n  const toggleSidebar = () => setIsSidebarOpen((state) => !state);\n\n  const closeSidebar = () => setIsSidebarOpen(false);\n  const openSidebar = () => setIsSidebarOpen(true);\n\n  return (\n    <>\n      <Navbar toggleSidebar={toggleSidebar} isSidebarOpen={isSidebarOpen} />\n      <Sidebar\n        closeSidebar={closeSidebar}\n        openSidebar={openSidebar}\n        isSidebarOpen={isSidebarOpen}\n        isBreakpointMd={isBreakpointMd}\n        setIsBreakpointMd={setIsBreakpointMd}\n      />\n      <Content isSidebarOpen={isSidebarOpen}></Content>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AAGA,SAASC,MAAT,QAAuB,iDAAvB;AACA,SAASC,OAAT,QAAwB,mDAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAqD;EAAA;;EAC1D,MAAMC,UAAU,GAAGL,aAAa,EAAhC;EAEA,MAAMM,gBAAgB,GAAGX,OAAO,CAAC,MAAM;IACrC,IAAIU,UAAU,CAACE,KAAX,IAAoBF,UAAU,CAACE,KAAX,GAAmBC,QAAQ,CAACP,WAAW,CAACQ,EAAb,EAAiB,EAAjB,CAAnD,EAAyE;MACvE,OAAO,KAAP;IACD,CAFD,MAEO,IAAIJ,UAAU,CAACE,KAAX,IAAoBF,UAAU,CAACE,KAAX,GAAmBC,QAAQ,CAACP,WAAW,CAACQ,EAAb,EAAiB,EAAjB,CAAnD,EAAyE;MAC9E,OAAO,IAAP;IACD,CAFM,MAEA;MACL,OAAO,KAAP;IACD;EACF,CAR+B,EAQ7B,CAACJ,UAAU,CAACE,KAAZ,CAR6B,CAAhC;EAUA,MAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAU,IAAV,CAAlD;EACA,MAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAClDkB,SADkD,CAApD;EAIAZ,gBAAgB,CAAC,QAAD,EAAW,MAAM;IAC/B,IAAIG,UAAU,CAACE,KAAX,IAAoBF,UAAU,CAACE,KAAX,GAAmBC,QAAQ,CAACP,WAAW,CAACQ,EAAb,EAAiB,EAAjB,CAAnD,EAAyE;MACvEM,UAAU,CAACC,YAAD,EAAe,GAAf,CAAV;IACD;EACF,CAJe,CAAhB;EAMAtB,SAAS,CAAC,MAAM;IACdmB,iBAAiB,CAACP,gBAAD,CAAjB;EACD,CAFQ,EAEN,CAACD,UAAU,CAACE,KAAZ,CAFM,CAAT;;EAIA,MAAMU,aAAa,GAAG,MAAMN,gBAAgB,CAAEO,KAAD,IAAW,CAACA,KAAb,CAA5C;;EAEA,MAAMF,YAAY,GAAG,MAAML,gBAAgB,CAAC,KAAD,CAA3C;;EACA,MAAMQ,WAAW,GAAG,MAAMR,gBAAgB,CAAC,IAAD,CAA1C;;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,aAAa,EAAEM,aAAvB;MAAsC,aAAa,EAAEP;IAArD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MACE,YAAY,EAAEM,YADhB;MAEE,WAAW,EAAEG,WAFf;MAGE,aAAa,EAAET,aAHjB;MAIE,cAAc,EAAEE,cAJlB;MAKE,iBAAiB,EAAEC;IALrB;MAAA;MAAA;MAAA;IAAA,QAFF,eASE,QAAC,OAAD;MAAS,aAAa,EAAEH;IAAxB;MAAA;MAAA;MAAA;IAAA,QATF;EAAA,gBADF;AAaD;;GA9CeP,Q;UACKH,a,EAiBnBE,gB;;;KAlBcC,Q"},"metadata":{},"sourceType":"module"}