{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/coding/projects/todofeito-app/src/pages/base-page/BasePage.component.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { Navbar } from '../../components/layout/Navbar/Navbar.component';\nimport { Sidebar } from '../../components/layout/Sidebar/Sidebar.component';\nimport { Content } from './BasePage.styled';\nimport { useWindowSize } from '../../hooks/useWindowSize';\nimport { breakpoints } from '../../styles/theme/theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function BasePage(props) {\n  _s();\n\n  const windowSize = useWindowSize();\n  const checkWindowWidth = useMemo(() => {\n    if (windowSize.width && windowSize.width > parseInt(breakpoints.md, 10)) {\n      return false;\n    } else if (windowSize.width && windowSize.width < parseInt(breakpoints.md, 10)) {\n      return true;\n    } else {\n      return false;\n    }\n  }, [windowSize.width]);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isSidebarMd, setIsSidebarMd] = useState(undefined);\n  useEffect(() => {\n    setIsSidebarMd(checkWindowWidth);\n    console.log(isSidebarMd);\n    console.log(windowSize);\n  });\n\n  const toggleSidebar = () => setIsSidebarOpen(state => !state);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toggleSidebar: toggleSidebar,\n      isSidebarOpen: isSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      toggleSidebar: toggleSidebar,\n      isSidebarOpen: isSidebarOpen,\n      isSidebarMd: isSidebarMd,\n      setIsSidebarMd: setIsSidebarMd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      isSidebarOpen: isSidebarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BasePage, \"P97oyHoJ8XB4ncfPBSBxbB+lsok=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = BasePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasePage\");","map":{"version":3,"names":["useEffect","useMemo","useState","Navbar","Sidebar","Content","useWindowSize","breakpoints","BasePage","props","windowSize","checkWindowWidth","width","parseInt","md","isSidebarOpen","setIsSidebarOpen","isSidebarMd","setIsSidebarMd","undefined","console","log","toggleSidebar","state"],"sources":["/home/user/Documents/coding/projects/todofeito-app/src/pages/base-page/BasePage.component.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { BasePageProps } from './BasePage.types';\n\nimport { Navbar } from '../../components/layout/Navbar/Navbar.component';\nimport { Sidebar } from '../../components/layout/Sidebar/Sidebar.component';\nimport { Content } from './BasePage.styled';\nimport { useWindowSize } from '../../hooks/useWindowSize';\nimport { breakpoints } from '../../styles/theme/theme';\n\nexport function BasePage(props: BasePageProps): JSX.Element {\n  const windowSize = useWindowSize();\n\n  const checkWindowWidth = useMemo(() => {\n    if (windowSize.width && windowSize.width > parseInt(breakpoints.md, 10)) {\n      return false;\n    } else if (windowSize.width && windowSize.width < parseInt(breakpoints.md, 10)) {\n      return true;\n    } else {\n      return false;\n    }\n  }, [windowSize.width]);\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState<boolean>(true);\n  const [isSidebarMd, setIsSidebarMd] = useState<boolean | undefined>(undefined);\n\n  useEffect(() => {\n    setIsSidebarMd(checkWindowWidth);\n    console.log(isSidebarMd);\n    console.log(windowSize);\n  });\n\n  const toggleSidebar = () => setIsSidebarOpen((state) => !state);\n\n  return (\n    <>\n      <Navbar toggleSidebar={toggleSidebar} isSidebarOpen={isSidebarOpen} />\n      <Sidebar\n        toggleSidebar={toggleSidebar}\n        isSidebarOpen={isSidebarOpen}\n        isSidebarMd={isSidebarMd}\n        setIsSidebarMd={setIsSidebarMd}\n      />\n      <Content isSidebarOpen={isSidebarOpen}></Content>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AAGA,SAASC,MAAT,QAAuB,iDAAvB;AACA,SAASC,OAAT,QAAwB,mDAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,0BAA5B;;;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAqD;EAAA;;EAC1D,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;EAEA,MAAMK,gBAAgB,GAAGV,OAAO,CAAC,MAAM;IACrC,IAAIS,UAAU,CAACE,KAAX,IAAoBF,UAAU,CAACE,KAAX,GAAmBC,QAAQ,CAACN,WAAW,CAACO,EAAb,EAAiB,EAAjB,CAAnD,EAAyE;MACvE,OAAO,KAAP;IACD,CAFD,MAEO,IAAIJ,UAAU,CAACE,KAAX,IAAoBF,UAAU,CAACE,KAAX,GAAmBC,QAAQ,CAACN,WAAW,CAACO,EAAb,EAAiB,EAAjB,CAAnD,EAAyE;MAC9E,OAAO,IAAP;IACD,CAFM,MAEA;MACL,OAAO,KAAP;IACD;EACF,CAR+B,EAQ7B,CAACJ,UAAU,CAACE,KAAZ,CAR6B,CAAhC;EAUA,MAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAU,IAAV,CAAlD;EACA,MAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAsBiB,SAAtB,CAA9C;EAEAnB,SAAS,CAAC,MAAM;IACdkB,cAAc,CAACP,gBAAD,CAAd;IACAS,OAAO,CAACC,GAAR,CAAYJ,WAAZ;IACAG,OAAO,CAACC,GAAR,CAAYX,UAAZ;EACD,CAJQ,CAAT;;EAMA,MAAMY,aAAa,GAAG,MAAMN,gBAAgB,CAAEO,KAAD,IAAW,CAACA,KAAb,CAA5C;;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,aAAa,EAAED,aAAvB;MAAsC,aAAa,EAAEP;IAArD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MACE,aAAa,EAAEO,aADjB;MAEE,aAAa,EAAEP,aAFjB;MAGE,WAAW,EAAEE,WAHf;MAIE,cAAc,EAAEC;IAJlB;MAAA;MAAA;MAAA;IAAA,QAFF,eAQE,QAAC,OAAD;MAAS,aAAa,EAAEH;IAAxB;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAYD;;GApCeP,Q;UACKF,a;;;KADLE,Q"},"metadata":{},"sourceType":"module"}