{"ast":null,"code":"import _slicedToArray from \"/home/user/Documents/coding/projects/todofeito-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nimport { useEventListener } from './useEventListener';\nexport function useHover(elementRef) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hover = _useState2[0],\n      setHover = _useState2[1];\n\n  var handleMouseEnter = function handleMouseEnter() {\n    return setHover(true);\n  };\n\n  var handleMouseLeave = function handleMouseLeave() {\n    return setHover(false);\n  };\n\n  useEventListener('mouseenter', handleMouseEnter, elementRef);\n  useEventListener('mouseleave', handleMouseLeave, elementRef);\n  return hover;\n}","map":{"version":3,"names":["useState","useEventListener","useHover","elementRef","hover","setHover","handleMouseEnter","handleMouseLeave"],"sources":["/home/user/Documents/coding/projects/todofeito-app/client/src/hooks/useHover.ts"],"sourcesContent":["import { RefObject, useState } from 'react';\nimport { useEventListener } from './useEventListener';\n\nexport function useHover<T extends HTMLElement = HTMLElement>(\n  elementRef: RefObject<T>\n): boolean {\n  const [hover, setHover] = useState<boolean>(false);\n\n  const handleMouseEnter = () => setHover(true);\n  const handleMouseLeave = () => setHover(false);\n\n  useEventListener('mouseenter', handleMouseEnter, elementRef);\n  useEventListener('mouseleave', handleMouseLeave, elementRef);\n\n  return hover;\n}\n"],"mappings":";AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,OAAO,SAASC,QAAT,CACLC,UADK,EAEI;EAAA,gBACiBH,QAAQ,CAAU,KAAV,CADzB;EAAA;EAAA,IACFI,KADE;EAAA,IACKC,QADL;;EAGT,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;IAAA,OAAMD,QAAQ,CAAC,IAAD,CAAd;EAAA,CAAzB;;EACA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB;IAAA,OAAMF,QAAQ,CAAC,KAAD,CAAd;EAAA,CAAzB;;EAEAJ,gBAAgB,CAAC,YAAD,EAAeK,gBAAf,EAAiCH,UAAjC,CAAhB;EACAF,gBAAgB,CAAC,YAAD,EAAeM,gBAAf,EAAiCJ,UAAjC,CAAhB;EAEA,OAAOC,KAAP;AACD"},"metadata":{},"sourceType":"module"}